name: CMake Build Matrix

on:
  push:
  pull_request:
  release:

jobs:
  get-rel-name:
    runs-on: ubuntu-latest
    steps:
      - name: Variables
        id: variables
        uses: actions/github-script@v3
        with:
          script: |
            const ref='${{ github.ref }}'
            if (ref.startsWith('refs/tags/') && ref.endsWith('-latest')) {
              const version=/^refs\/tags\/(.+)-latest/.exec(ref)[1]
              core.exportVariable('VERSION', version)
              core.exportVariable('LATEST', true)
            } else {
              const version=/^refs\/tags\/(.+)/.exec(ref)[1]
              core.exportVariable('VERSION', version)
              core.exportVariable('LATEST', false)
            }
    outputs:
      version: $VERSION

  #  build-stuff:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v4
  #      - name: Upload package
  #        uses: actions/upload-artifact@v4
  #        with:
  #          name: binaries-darwin
  #          path: build/rexsapi-darwin-1.0.0.zip

  build-more-stuff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux
          path: build/rexsapi-linux-1.0.0.zip

  create_release:
    name: Create release
    if: startsWith( github.ref, 'refs/tags/') && endsWith(github.ref, '-latest')
    runs-on: ubuntu-latest
    # needs: [build-stuff, build-more-stuff]
    needs: [build-more-stuff, get-rel-name]
    steps:
      - name: Print
        run: |
          echo "${{ needs.get-rel-name.outputs.version }}"
      - uses: actions/checkout@v4
      - name: Display structure of folders
        run: ls -R
      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.ref_name }}
          body: Some text
          artifacts: "./build/rexsapi-*.zip"
          removeArtifacts: true
