name: CMake Build Matrix

on:
  push:
  pull_request:
  release:

jobs:
  get-rel-name:
    runs-on: ubuntu-latest
    steps:
      - name: Variables
        id: variables
        uses: actions/github-script@v7
        with:
          script: |
            const ref='${{ github.ref }}'
            if (ref.startsWith('refs/tags/') && ref.endsWith('-latest')) {
              const version=/^refs\/tags\/(.+)-latest/.exec(ref)[1]
              core.exportVariable('VERSION', version)
              core.exportVariable('LATEST', true)
            } else if (ref.startsWith('refs/tags/')) {
              const version=/^refs\/tags\/(.+)/.exec(ref)[1]
              core.exportVariable('VERSION', version)
              core.exportVariable('LATEST', false)
            } else {
              core.exportVariable('LATEST', false)
            }
      - name: Set outputs
        id: vars
        run: |
          echo $VERSION
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "latest=$LATEST" >> $GITHUB_OUTPUT
    outputs:
      version: ${{ steps.vars.outputs.version }}
      latest: ${{ steps.vars.outputs.latest }}

  #  build-stuff:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v4
  #      - name: Upload package
  #        uses: actions/upload-artifact@v4
  #        with:
  #          name: binaries-darwin
  #          path: build/rexsapi-darwin-1.0.0.zip

  build-more-stuff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux
          path: build/rexsapi-linux-1.0.0.zip

  create_release:
    name: Create release
    if: startsWith( github.ref, 'refs/tags/') && endsWith(github.ref, '-latest')
    runs-on: [ubuntu-latest]
    # needs: [build-stuff, build-more-stuff]
    needs: [build-more-stuff, get-rel-name]
    steps:
      - name: Print
        run: |
          echo "Version ${{ needs.get-rel-name.outputs.version }}"
          echo ${{ needs.get-rel-name.outputs.latest }}
      - name: Set tags
        if: startsWith( github.ref, 'refs/tags/')
        id: tags
        run: |
          if [ ${{ needs.get-rel-version.outputs.latest }} = true ]; then
            echo "value=registry.neutronedge.com:5001/evp:evp-v${{ needs.get-rel-version.outputs.version }},registry.neutronedge.com:5001/evp:latest" >> $GITHUB_OUTPUT
          else
            echo "value=registry.neutronedge.com:5001/evp:evp-v${{ needs.get-rel-version.outputs.version }}" >> $GITHUB_OUTPUT
          fi
      - name: Print tags
        run: |
          echo "TAGS ${{ steps.tags.outputs.value }}"
      # - uses: actions/checkout@v4
      # - name: Display structure of folders
      #   run: ls -R
      # - name: Create release
      #   id: create_release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     name: ${{ github.ref_name }}
      #     body: Some text
      #     artifacts: "./build/rexsapi-*.zip"
      #     removeArtifacts: true
